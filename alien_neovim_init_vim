set number
set relativenumber
set ignorecase
syntax enable
set clipboard=unnamedplus
set hidden
set splitbelow splitright
set noswapfile
set hlsearch
set incsearch

"reload vim config
command! Reload execute "source ~/.vimrc"
set nofoldenable



let mapleader = " "

" replace space mit unterstrich im selektierten bereich
noremap <leader>- :s/\%V /_/g
" replace ende mit 2x space im ganzen file
noremap <leader>4 :%s/$/  /


" remap split navigation to just control
noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l4

"optisch insert mode erkennen
 
autocmd InsertEnter * set cul
autocmd InsertLeave * set nocul


" make adjusting split size more user friendly


noremap <silent> <C-left> :vertical resize +3<CR>
noremap <silent> <C-right> :vertical resize -3<CR>
noremap <silent> <C-up> :resize +3<CR>
noremap <silent> <C-down> :resize -3<CR>

let g:UltiSnipsExpandTrigger="<tab>"  " use <Tab> to trigger autocompletion
let g:UltiSnipsJumpForwardTrigger="<A-j>"
let g:UltiSnipsJumpBackwardTrigger="<A-k>"


imap jj <Esc>


call plug#begin('~/.config/nvim/plugged')

Plug 'http://github.com/tpope/vim-surround' " Surrounding ysw)
Plug 'https://github.com/preservim/nerdtree' " NerdTree
Plug 'https://github.com/tpope/vim-commentary' " For Commenting gcc & gc
Plug 'https://github.com/itchyny/lightline.vim'
Plug 'https://github.com/vim-airline/vim-airline' " Status bar
Plug 'https://github.com/ap/vim-css-color' " CSS Color Preview
Plug 'https://github.com/rafi/awesome-vim-colorschemes' " Retro Scheme
Plug 'https://github.com/ryanoasis/vim-devicons' " Developer Icons
Plug 'https://github.com/tc50cal/vim-terminal' " Vim Terminal
Plug 'https://github.com/terryma/vim-multiple-cursors' " CTRL + N for multiple cursors
Plug 'https://github.com/preservim/tagbar' " Tagbar for code navigation
Plug 'https://github.com/neoclide/coc.nvim'  " Auto Completion
Plug 'https://github.com/junegunn/limelight.vim'
Plug 'https://github.com/sirver/ultisnips'
Plug 'https://github.com/honza/vim-snippets'
Plug 'https://github.com/junegunn/goyo.vim'
Plug 'https://github.com/mzlogin/vim-markdown-toc'
Plug 'vimwiki/vimwiki'
Plug 'https://github.com/mattn/calendar-vim'
Plug 'godlygeek/tabular'
Plug 'elzr/vim-json'
Plug 'myhere/vim-nodejs-complete'
Plug 'plasticboy/vim-markdown'

"Plug 'iamcco/markdown-preview.nvim', { 'do': { -> mkdp#util#install() }}
Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app && yarn install' } 
"Plug 'iamcco/markdown-preview.nvim', { 'do': { -> mkdp#util#install() }}
"Plug '$XDG_DATA_HOME/fzf'
Plug 'junegunn/fzf.vim'
Plug 'vim-pandoc/vim-pandoc-syntax'

set encoding=UTF-8

call plug#end()


" do not close the preview tab when switching to other buffers
let g:mkdp_auto_close = 0
nnoremap <M-m> :MarkdownPreview<CR>

"Control P for fzf finder
nnoremap <C-p> :Files<Cr>


"nnoremap <C-f> :NERDTreeFocus<CR>
nnoremap <C-n> :NERDTree<CR>
nnoremap <C-t> :NERDTreeToggle<CR>
"nnoremap <C-l> :call CocActionAsync('jumpDefinition')<CR>

nmap <F8> :TagbarToggle<CR>

:set completeopt-=preview " For No Previews

" :colorscheme jellybeans

let g:NERDTreeDirArrowExpandable="+"
let g:NERDTreeDirArrowCollapsible="~"

let g:vimwiki_list = [{'path': '$HOME/Dropbox/wiki'}] " set path to a directory inside Dropbox
let g:vimwiki_ext = '.md' " set extension to .md
let g:vimwiki_global_ext = 0 " make sure vimwiki doesn't own all .md files

let g:ackprg = 'ag --nogroup --nocolor --column' "silver searcher fzf - like




